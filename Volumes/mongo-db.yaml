# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: pv
# spec:
#   accessModes:
#     - ReadWriteOncePod
#   storageClassName: standard-rwo 
#   capacity:
#     storage: 1Gi
#   local:
#     path: "/dev/demo"
#   persistentVolumeReclaimPolicy: Delete
#   nodeAffinity:
#     required:
#       nodeSelectorTerms:
#         - matchExpressions:
#             - key: kubernetes.io/hostname
#               operator: In
#               values:
#                 - gke-kubenetes-default-pool-39353498-n3mq
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: pvc
# spec:
#   accessModes:
#     - ReadWriteOncePod
#   resources:
#     requests:
#       storage: 1Gi
#   storageClassName: standard-rwo 
  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - image: mongo
          name: mongo
          args: ["--dbpath", "/data/db"]
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "admin"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "password"
      #     volumeMounts:
      #       - mountPath: /data/db
      #         name: mongo-volume
      # volumes: 
      #   - name: mongo-volume
      #     hostPath: 
      #       path: /data
            
          
      #     volumeMounts:
      #       - mountPath: /data/db
      #         name: mongo-volume
      # volumes:
      #   - name: mongo-volume
      #     persistentVolumeClaim:
      #       claimName: mongo-pvc
      #     volumeMounts:
      #       - mountPath: "/data/db"
      #         name: mongo
      # volumes:
      #   - name: mongo
      #     persistentVolumeClaim:
      #       claimName: pvc

---
apiVersion: v1
kind: Service
metadata:
  name: svc
spec:
  type: NodePort
  selector:
    app: mongo
  ports:
    - port: 27017
      nodePort: 31000
      targetPort: 27017
      