# Configure 'Deployment' of mysql server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-db
  labels:
    app: spring-db-k8s
spec:
  minReadySeconds: 2 # this is how many seconds should run pods
  replicas: 1 # how many pods shouls i want
  strategy:
    type: Recreate
  selector: # mysql Pod Should contain same labels 
    matchLabels:
      app: spring-db-k8s
  template:
    metadata:
      labels:  # Must match 'Service' and 'Deployment' selectors
         app: spring-db-k8s
    spec:
      containers:
        - name: spring-db
          image: mysql:5.7  # image from docker-hub
          ports:
            - containerPort: 3306
          env: # Setting Enviornmental Variables
            - name: MYSQL_ROOT_PASSWORD # Setting Root Password of mysql From a 'Secret'
              valueFrom:
                secretKeyRef: 
                  name: db-root-credetials  # Name of the 'Secret'
                  key: password   # 'key' inside the Secret which contains required 'value'
            - name: MYSQL_USER # Setting USER username on mysql From a 'Secret'
              valueFrom:
                secretKeyRef:
                  name: db-credetials
                  key: username    
            - name: MYSQL_PASSWORD  # Setting USER Password on mysql From a 'Secret'
              valueFrom:
                secretKeyRef:
                  name: db-credetials
                  key: password  
            - name:  MYSQL_DATABASE # Setting Database Name from a 'ConfigMap'
              valueFrom:
                configMapKeyRef:
                  name: db-user-name
                  key: mysql-db
          volumeMounts:
            - name: db-pvc-storage    # Mounting voulume obtained from Persistent Volume Claim
              mountPath: /var/lib/mysql #This is the path in the container on which the mounting will take place.
      volumes:
        - name: db-pvc-storage  # Obtaining 'vloume' from PVC
          persistentVolumeClaim:
            claimName: db-pvc
  
# Define a 'Service' To Expose mysql to Other Services
---
apiVersion: v1
kind: Service
metadata:
  name: spring-db-k8s  # DNS name 
  labels:
    app: spring-db-k8s  # mysql Pod Should contain same labels
spec:
  type: LoadBalancer  # We Use DNS, Thus ClusterIP is not relevant
  selector:
    app: spring-db-k8s
  ports:
    - port: 80
      targetPort: 3306


